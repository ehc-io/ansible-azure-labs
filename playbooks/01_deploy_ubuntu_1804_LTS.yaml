# This file establishes the necessary resources on Azure to create a Demo Webserver using Ubuntu
# validated  eduardoc/ansible-azure-labs
#
- name: Create Ubuntu resources
  hosts: localhost
  vars_files:
    - ./config.yml

  tasks:
    - name: Create a resource group
      azure_rm_resourcegroup:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        name: "{{ RESOURCE_GROUP }}"
        location: "{{ DEFAULT_LOCATION }}"

    - name: Create virtual network
      azure_rm_virtualnetwork:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: "{{ VNET1 }}"
        address_prefixes: "10.1.0.0/16"

    - name: Add subnet
      azure_rm_subnet:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: "{{ VNET_SUBNET1 }}"
        address_prefix: "10.1.20.0/24"
        virtual_network: "{{ VNET1 }}"

    - name: Create {{ NODE_NAME }} Storage Account in Resource Group {{ RESOURCE_GROUP }}
      azure_rm_storageaccount:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: "sa{{ STUDENT_ID }}20190710"
        account_type: Standard_LRS

    - name: Create {{ NODE_NAME }}-{{ STUDENT_ID }} internal NIC in Resource Group {{ RESOURCE_GROUP }}
      azure_rm_networkinterface:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: "{{ NODE_NAME }}-{{ STUDENT_ID }}-int-nic0"
        virtual_network: "{{ VNET1 }}"
        subnet: "{{ VNET_SUBNET1 }}"
        ip_configurations:
          - name: ipconfig1
            private_ip_allocation_method: Static
            private_ip_address: "{{ NODE_ADDRESS }}"
            public_ip_address_name: "{{ NODE_NAME }}-{{ STUDENT_ID }}-int-pip0"
      register: "api-server-int-nic-private"

    - name: Edit {{ NODE_NAME }}-{{ STUDENT_ID }} Security Group in Resource Group {{ RESOURCE_GROUP }} (Allow DATA and Access)
      azure_rm_securitygroup:
          tenant: "{{ TENANT_ID }}"
          client_id: "{{ CLIENT_ID}}"
          secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
          subscription_id: "{{ SUBSCRIPTION_ID }}"
          resource_group: "{{ RESOURCE_GROUP }}"
          name: "{{ NODE_NAME }}-{{ STUDENT_ID }}-int-nic0"
          purge_rules: yes
          rules:
              - name: 'Allow_TCP_3000'
                protocol: Tcp
                source_address_prefix: '{{ ALLOWED_SRC_ADDRESS }}'
                destination_port_range: 3000
                access: Allow
                priority: 100
                direction: Inbound
              - name: 'Allow_SSH'
                protocol: Tcp
                source_address_prefix: '{{ ALLOWED_SRC_ADDRESS }}'
                destination_port_range: 22
                access: Allow
                priority: 101
                direction: Inbound

    - name: Create {{ NODE_NAME }} Virtual Machine
      azure_rm_virtualmachine:
        tenant: "{{ TENANT_ID }}"
        client_id: "{{ CLIENT_ID}}"
        secret: "{{ SERVICE_PRINCIPAL_SECRET }}"
        subscription_id: "{{ SUBSCRIPTION_ID }}"
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: "{{ STUDENT_ID }}-backend-api"
        vm_size: Standard_B2s
        storage_account: "sa{{ STUDENT_ID }}20190710"
        storage_container: "{{ NODE_NAME }}{{ STUDENT_ID }}"
        storage_blob: "{{ NODE_NAME }}{{ STUDENT_ID }}.vhd"
        admin_username: "{{ NODE_USER }}"
        admin_password: "{{ NODE_PASSWORD }}"
        network_interfaces: "{{ NODE_NAME }}-{{ STUDENT_ID }}-int-nic0"
        append_tags: True
        tags:
          OperatingSystem: "Ubuntu"
          OperatingSystemVersion: "18.04-LTS"
          Applications: "All"
        image:
          offer: UbuntuServer
          publisher: Canonical
          sku: 18.04-LTS
          version: latest

    - name: Create VM Extension
      azure_rm_virtualmachineextension:
        location: "{{ DEFAULT_LOCATION }}"
        resource_group: "{{ RESOURCE_GROUP }}"
        name: server_onboarding
        virtual_machine_name: "{{ STUDENT_ID }}-backend-api"
        publisher: Microsoft.Azure.Extensions
        virtual_machine_extension_type: CustomScript
        type_handler_version: 2.0
        settings: '{"commandToExecute": "sudo apt-get update ; sudo apt-get install -y docker docker-compose ; git clone https://github.com/ehc-io/bookscatalog.git ; cd bookscatalog/ ; sudo docker-compose up&"}'
        auto_upgrade_minor_version: true